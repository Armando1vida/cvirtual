<?php

/**
 * This is the model base class for the table "usuarios_asignados".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsuariosAsignados".
 *
 * Columns in table "usuarios_asignados" available as properties of the model,
 * followed by relations of table "usuarios_asignados" available as properties of the model.
 *
 * @property integer $iduser
 * @property integer $iduser_asignado
 *
 * @property CrugeUser $iduser0
 * @property CrugeUser $iduserAsignado
 */
abstract class BaseUsuariosAsignados extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'usuarios_asignados';
    }

    public static function representingColumn() {
        return array(
            'iduser',
            'iduser_asignado',
        );
    }

    public function rules() {
        return array(
            array('iduser, iduser_asignado', 'required'),
            array('iduser, iduser_asignado', 'numerical', 'integerOnly'=>true),
            array('iduser, iduser_asignado', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'iduser0' => array(self::BELONGS_TO, 'CrugeUser', 'iduser'),
            'iduserAsignado' => array(self::BELONGS_TO, 'CrugeUser', 'iduser_asignado'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'iduser' => Yii::t('app', 'Iduser'),
                'iduser_asignado' => Yii::t('app', 'Iduser Asignado'),
                'iduser0' => null,
                'iduserAsignado' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('iduser', $this->iduser);
        $criteria->compare('iduser_asignado', $this->iduser_asignado);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}